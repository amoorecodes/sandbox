            ==== Node JS ====

*** available modules ***

path => prints/ manipulates the path to a file. 
  basename() => plucks out the name of the file from path

util => utilities module
  log() => more detailed than console

readline => asks questions, writes answers
  question()

events => 
  new EventEmitter() => creates an instance of event
  on('customEvent', do this) => do special things on custom event
  emit('customEvent', args) => execute .on condition

  exec() => executes commands to bash. Made for async sync processes with small piesces of data. 
  spawn() => Made for longer, more complex processes with larger data. 

filesystem => manipulates files on a computer
  readdirSync() => creates a list of all files in given directory, syncronously. Can clog the thread. 
  

*** available methods ***

__dirname => prints out directory path

__filename => prints out filename path

write() => send a message to a terminal

setTimeout() => waits given time than executes a callback

serInterval() => repeatedly executes a callback after given time (does not exit)

clearInterval() / clearTimeout() => stops either/or

open => opens files in external windows:
  . => opens directory in finder
  https:// => opens website in default browser





*** available objects *** 

console => self-explanatory

process => get env info, manipulate process instance

  stdin => input
  stdout => output
    clearLine() => erases the message
    cursorTo() => goes to given character index / line



Apache is multithreaded === single task gets its own thread.
Node is singlethreaded / asynchronous === no blocking. 
It can do more than one thing at a time.
All events are put in the que (stack) and are served in order. 

Node has global object as a top level object. It has a handful of methods (including console, for example).

console.log('something') === global.console.log('something')

It works similar to browser but is not the same. 

Variables are scoped in Node, they are not stored in Global object. They can be accessed as is. 

When you run node command you can leave out .js in file, as it is assumed the file would be .js . 

Standard Input/ Output

